today i learnt very bacsics how to build logics in mathemetical question not just found answer but also focused on time and space complexity.
1.even or odd

public class math1 {
    public static boolean iseven(int n){
        
        return (n%2==0);
    }
    public static void main(String[] args) {
        int n=26733243;
       System.out.println( iseven(n) ? "even num" : "odd num");
    }
}

2.print table
public class math2 {
   public static void printtable(int n){
       for(int i=1;i<=10;i++){
        System.out.println(n +" * "+i+" = "+n*i);
       }
    
    }
    public static void main(String[] args) {
        printtable(5);
    }
}3

3. closest number
public class Math {
    public static int closestnumber(int n,int  m){
        int q=n/m;
        int n1=q*m,n2=(q+1)*m;
        if(java.lang.Math.abs(n-n1) < java.lang.Math.abs(n-n2))
       { return n1;
    }
        else if(java.lang.Math.abs(n-n2) < java.lang.Math.abs(n-n1))
        return n2;
        else return (java.lang.Math.abs(n1)>java.lang.Math.abs(n2)) ? n1 : n2;
    }
    public static void main(String[] args) {
        int ans=closestnumber(6, 4);
        System.out.print(ans);
    }
}
4.dice question
public class math4{
public static int dice(int n){
        


        return (7-n);

}

    public static void main(String[] args) {
        int n=6;
        int ans=dice(n);
        System.out.println("Your top number is "+n+" and back number is "+ans);

    }
}
5.finding nth tearm of ap
public class math5 {
    public static int apterm(int n1,int n2,int noofterms){
        int d=n2-n1;
return java.lang.Math.abs(n1+(noofterms-1)*d);
    }
    public static void main(String[] args) {
       System.out.println( apterm(2,3 , 4));
        
    }
}
6.prime or not
public class math6 {
    public static boolean isprime(int n){//n=6
        int c=2;
        if(n<=1)
        return false;
       while (c*c<=n) {
        if(n%c==0)
        return false;
        c++;


        
       }
       return true;

        
       

    }
    public static void main(String[] args) {
        System.out.println(isprime(31));
    }
}
7.to check x power of number is equal to y:
public class math7 {
  static boolean power(int x,long y){
    if(x==1)
    return (y==1);
    long pow=1;
    while(pow<y)
        pow*=x;
    
    return (pow==y);
       
       
    
    
    
  }
 public static void main(String[] args) {
    System.out.println(power(10, 1001));
 }   
}
8.finding distance 
public class math8 {
    static double distance(double x1,double y1,double x2,double y2){
        return java.lang.Math.sqrt(((x2-x1)*(x2-x1))  +  ((y2-y1)*(y2-y1))); 
    }

    public static void main(String[] args) {
        // int ans=Math.round(distance(1,2 , 4, 6));
        System.out.println(distance(1, 2, 4, 6));
    }
}
9.triangle side check
public class math9 {
    static boolean triangle(int a,int b,int c){
       
       

       return ((a+b)>c && (a+c)>b && (b+c)>a);
    }
    public static void main(String[] args) {
     System.out.println(triangle(7,10,5)? "valid" : "invalid");
    }
}
10.to check a pair of cube of a number is equal to number given by user
public class math10 {
    static int main(int n){
        int count =0,a,b;
        for(a=1;a<=n;a++){
            for(b=0;b<=n;b++){
                if(a*a*a+b*b*b==n)
                count++;
            }
        }
          
        
        
        return count;
    }
    public static void main(String[] args) {
        System.out.println(main(144));
    }
}
11.finding factors of a number:

public class math11 {
    static void factors(int a){
       
        
        for (int i = 1; i * i <= a; i++) {
            if (a % i == 0) {
                System.out.print(i+" ");       // i is a factor
                if (i != a / i) {
                    System.out.print((a / i)+" "); // n/i is also a factor
                }
            }
        }
            
    }
    
        
    
           
        
    
    public static void main(String[] args) {
     factors(56);

    }
   
}
12.finding gcd using eculidean algorithm 
public class math12 {
 
        public static int gcd(int a, int b) {
            if (b == 0) {
                return a;
            }
            return gcd(b, a % b);
        }
    
        public static void main(String[] args) {
            int num1 = 48;
            int num2 = 18;
            System.out.println("GCD of " + num1 + " and " + num2 + " is: " + gcd(num1, num2));
        }

}




